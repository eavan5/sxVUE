{"version":3,"file":"vue.js","sources":["../src/observer/array.js","../src/observer/index.js","../src/util.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["// 切片编程\n\n\nlet oldArrayProtoMethods = Array.prototype;\n\n//继承一下\nexport let arrayMethods = Object.create(oldArrayProtoMethods)\n\nlet methods = [\n  'push',\n  'pop',\n  'unshift',\n  'shift',\n  'reverse',\n  'splice',\n  'sort'\n]\nmethods.forEach(method => {\n  arrayMethods[method] = function (...args) {  //这里的this就是observer的data\n    console.log('数组方法被调用了');\n    const result = oldArrayProtoMethods[method].apply(this, arguments)\n    let inserted\n    let ob = this.__ob__\n    switch (method) {\n      case 'push':\n      case 'unshift': //这两个内容都是添加,添加的内容可能是对象类型,应该再次进行劫持\n        inserted = args\n        break;\n      case 'splice': //vue.$set原理\n        inserted = args.slice(2) // 第3个就是新增的数据\n      default:\n        break;\n    }\n    //如果当前的inserted有值 则继续检测\n    if (inserted) ob.serveArray(inserted)\n    return result\n  }\n})\n\n\n\n","import { arrayMethods } from './array'\nclass Observer {\n  constructor(data) {\n    //使用defineProperty重新定义属性\n    //判断一个对象是否被观察到,则看这个属性有没有__ob__属性\n    Object.defineProperty(data, '_ob_', {\n      enumerable: false, //不能被枚举,不能被循环出来\n      configurable: false, // 不能修改赋值\n      value: this\n    })\n    if (Array.isArray(data)) {\n      Object.setPrototypeOf(data, arrayMethods)\n      //观测数组中的对象类型,对象变化也需要做一些事\n      this.observeArray(data)\n    } else {\n      //使用defineProperty 重新定义属性\n      this.walk(data)\n    }\n  }\n  observeArray(data) {\n    data.forEach(item => {\n      observe(item)\n    })\n  }\n  walk(data) {\n    let keys = Object.keys(data)\n    // console.log(keys);\n    keys.forEach(key => {\n      defineReactive(data, key, data[key])\n    })\n  }\n}\n\nfunction defineReactive(data, key, value) {\n  observe(value) // 递归下去\n  Object.defineProperty(data, key, {\n    get() {\n      console.log('获取值');\n      return value\n    },\n    set(newValue) {\n      console.log('设置值');\n      if (newValue === value) return\n      observe(newValue)  //如果用户设置的值还是一个对象,继续观测\n      value = newValue\n    }\n  })\n\n}\n\nexport function observe(data) {\n  // Object.defineProperty实际上也是可以对数组进行监控的，但是由于监控数组会去递归数组，会造成性能问题，所以改用数组原型重写的方法\n\n\n  // 如果不是对象直接return\n  if (typeof data !== 'object' || data === null) return\n  //如果已经被监听,则return\n  if (data.__ob__) return\n  return new Observer(data)\n}","export function proxy(vm, data, key) {\n  Object.defineProperty(vm, key, {\n    get() {\n      return vm[data][key]\n    },\n    set(newValue) {\n      vm[data][key] = newValue\n    }\n  })\n}","\nimport { observe } from './observer/index'\nimport { proxy } from './util'\nexport function initState(vm) {\n  const options = vm.$options;\n  if (options.props) {\n    initProps(vm)\n  }\n  if (options.methods) {\n    initMethods(vm)\n  }\n  if (options.data) {\n    initData(vm)\n  }\n  if (options.computed) {\n    initComputed(vm)\n  }\n  if (options.watch) {\n    initWatch(vm)\n  }\n}\n\nfunction initProps() {\n\n}\n\nfunction initMethods() {\n\n}\n\n\nfunction initData(vm) {\n  let data = vm.$options.data\n  // 判断data是否是函数,兼容函数或者对象\n  vm._data = data = typeof data === 'function' ? data.call(vm) : data\n  //数据的劫持方案  对象Object.defineProperty\n  //数组 单独处理的\n\n  //当我从vm上取属性时,帮我吧属性上的取值代理到vm._data上\n  for (const key in data) {\n    if (Object.hasOwnProperty.call(data, key)) {\n      proxy(vm, \"_data\", key)\n    }\n  }\n\n  observe(data)\n}\n\nfunction initComputed() {\n\n}\n\nfunction initWatch() {\n\n}","import { initState } from './state'\nexport function initMixin(Vue) {\n  Vue.prototype._init = function (options) {\n    const vm = this;\n    vm.$options = options;\n\n    //初始化状态\n    initState(vm)\n\n    //初始化事件...\n  }\n\n}","import { initMixin } from './init'\nfunction Vue(options) {\n  this._init(options) // 初始化操作\n}\n\n//Vue初始化方法\ninitMixin(Vue)\nexport default Vue"],"names":["oldArrayProtoMethods","Array","prototype","arrayMethods","Object","create","methods","forEach","method","args","console","log","result","apply","arguments","inserted","ob","__ob__","slice","serveArray","Observer","data","defineProperty","enumerable","configurable","value","isArray","setPrototypeOf","observeArray","walk","item","observe","keys","key","defineReactive","get","set","newValue","proxy","vm","initState","options","$options","props","initData","computed","watch","_data","call","hasOwnProperty","initMixin","Vue","_init"],"mappings":"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"}